{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","aboutText","onClick","toggleMode","aria-checked","aria-labelledby","role","htmlFor","TextForm","_useState","useState","_useState2","Object","slicedToArray","text","setText","Fragment","style","color","heading","rows","value","onChange","event","target","backgroundColor","newText","toUpperCase","showAlert","newText1","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","split","length","Alert","alert","message","App","setMode","_useState3","_useState4","setAlert","setTimeout","body","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.fd3f5946.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import { Link } from 'react-router-dom'\r\n// import { Link } from 'react-router-dom'\r\n\r\n\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n    <div className=\"container-fluid\">\r\n      <a className=\"navbar-brand\" href='/'>{props.title}</a>\r\n      <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n        <span className=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n      <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n        <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n          <li className=\"nav-item\">\r\n            <a className=\"nav-link active\" aria-current=\"page\" href='/'>Home</a>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <a className=\"nav-link active\" aria-current=\"page\" href=\"/about\">{props.aboutText}</a>\r\n          </li>\r\n        \r\n          {/* <li className=\"nav-item dropdown\">\r\n            <a className=\"nav-link dropdown-toggle\" href=\"/\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n              Dropdown\r\n            </a>\r\n            <ul className=\"dropdown-menu\">\r\n              <li><a className=\"dropdown-item\" href=\"/\">Action</a></li>\r\n              <li><a className=\"dropdown-item\" href=\"/\">Another action</a></li>\r\n              <li><hr className=\"dropdown-divider\"/></li>\r\n              <li><a className=\"dropdown-item\" href=\"/\">Something else here</a></li>\r\n            </ul>\r\n          </li> */}\r\n      \r\n  \r\n        </ul>\r\n          <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n            <input className=\"form-check-input\" onClick={props.toggleMode} aria-checked=\"false\" aria-labelledby=\"foo\"  type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n             <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable Darkmode</label>\r\n             \r\n          </div>\r\n          {/* <div class={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n            <input class=\"form-check-input mx-3\" onClick={props.toggleMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n            <label class=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable green mode</label>\r\n          </div> */}\r\n\r\n        {/* <form className=\"d-flex\" role=\"search\">\r\n          <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n          <button className=\"btn btn-primary\" type=\"submit\">Search</button>\r\n        </form> */}\r\n      </div>\r\n    </div>\r\n  </nav>\r\n  )\r\n}\r\n\r\n  Navbar.propTypes = {title:PropTypes.string.isRequired,\r\n  aboutText:PropTypes.string\r\n}\r\n//  Navbar.defaultProps = {title:'set title here',\r\n//   aboutText: \"set about here\"\r\n//  }\r\n","import React, { useState } from \"react\";\r\n\r\nexport default function TextForm(props) {\r\n  const handleUpClick = () => {\r\n    //  console.log(\"Uppercase was clicked\" +text);\r\n    let newText = text.toUpperCase();\r\n\r\n    setText(newText);\r\n\r\n    props.showAlert(\"convert it to upper case\", \"success\");\r\n  };\r\n  const handleDownClick = () => {\r\n    let newText1 = text.toLowerCase();\r\n    setText(newText1);\r\n    props.showAlert(\"convert it to lower case\", \"success\");\r\n  };\r\n  const handleClearClick = () => {\r\n    let newText3 = \"\";\r\n    setText(newText3);\r\n  };\r\n  const handleCopyClick = () => {\r\n    var text = document.getElementById(\"myBox\");\r\n    text.select();\r\n    navigator.clipboard.writeText(text.value);\r\n    props.showAlert(\"copy to clipboard\", \"success\");\r\n  };\r\n  const handleOnChange = (event) => {\r\n    setText(event.target.value);\r\n  };\r\n  const [text, setText] = useState(\"\");\r\n  // text = \"new text\" this wrong way to change text\r\n  // setText(\"new Text\")\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"container\"\r\n        style={{ color: props.mode === \"dark\" ? \"white\" : \"black\" }}\r\n      >\r\n        <h1>{props.heading} </h1>\r\n        <div className=\"mb-3\">\r\n          <textarea\r\n            className=\"form-control\"\r\n            id=\"myBox\"\r\n            rows=\"9\"\r\n            value={text}\r\n            onChange={handleOnChange}\r\n            style={{\r\n              backgroundColor: props.mode === \"dark\" ? \"#262843\" : \"white\",\r\n              color: props.mode === \"dark\" ? \"white\" : \"black\",\r\n            }}\r\n          ></textarea>\r\n        </div>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleUpClick}>\r\n          Convert to upper case\r\n        </button>\r\n\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleDownClick}>\r\n          Convert to lower case\r\n        </button>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleClearClick}>\r\n          clear text\r\n        </button>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleCopyClick}>\r\n          copy Text\r\n        </button>\r\n      </div>\r\n      <div\r\n        className=\"container my-3\"\r\n        style={{ color: props.mode === \"dark\" ? \"white\" : \"black\" }}\r\n      >\r\n        <h2>Your text summary</h2>\r\n        <p>\r\n          {text.split(\" \").length} words and {text.length} charcters\r\n        </p>\r\n        <p>{0.008 * text.split(\" \").length} minutes to read</p>\r\n        <h2>Preview</h2>\r\n        <p>{text.length > 0 ? text : \"Enter something to preview it here\"}</p>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n//     const capitalize = (word)=>{\r\n// const lower = word.tolowerCase();\r\n// return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n  //   }\r\n  return (\r\n\r\n    props.alert &&  <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n  <strong>{props.alert.type}</strong>:{props.alert.message}\r\n</div>\r\n   \r\n  )\r\n}\r\n"," import './App.css';\n import Navbar from './components/Navbar'\n import TextForm from './components/TextForm';\n//  import About from './components/About';\nimport React , {useState} from 'react'\nimport Alert from './components/Alert';\n//  import { Switch } from 'react-router-dom';\n//  import {\n//    BrowserRouter as Router,\n//   Routes,\n//   Route,\n//  } from \"react-router-dom\";\n\n\nfunction App() {\n  const [mode , setMode] = useState('light'); // wheather darkmode is enabled or not\n  const [alert , setAlert] = useState(null);\n\n  const showAlert = (message , type)=>{\n    setAlert({\n      message:message,\n      type:type\n\n    })\n   setTimeout(() => {\n    setAlert(null);\n   }, 3500);\n  }\n  const toggleMode = ()=>{\n    if(mode === 'light'){\n      setMode ('dark')\n      document.body.style.backgroundColor =  '#15152b'\n      showAlert(\"Dark mode has been enabled \", \"success\")\n      document.title = \"Text Rander -Dark mode\"\n    }\n   \n    else{\n      setMode ('light')\n      document.body.style.backgroundColor =  'white'\n      showAlert(\"Light mode has been enabled \", \"success\")\n      document.title = \"Text Rander -Light mode\"\n\n\n    }\n  }\n  return (\n    <>\n{/* <Router> */}\n<Navbar title = \"TextRander2\" aboutText= \"About us Company\" mode = {mode} toggleMode={toggleMode}/>\n<Alert alert={alert} />\n<div className=\"container my-3\">\n{/* <Routes> */}\n          {/* <Route exact path=\"/about\"element = {<About />}> */}\n            \n          {/* </Route> */}\n         \n        {/* <Route exact path = \"/\" element = {} >   */}\n        <TextForm showAlert= {showAlert} heading = \"Enter The Text to Analyze Below\" mode = {mode}/>\n          \n          {/* </Route> */}\n{/* </Routes> */}\n</div>\n{/*  </Router> */}\n\n\n\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}